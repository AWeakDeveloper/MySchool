@model MySchool.Models.PaginatedList<MySchool.Models.Student>

@{
    ViewData["Title"] = "Students";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-group row">
        <label for="searchString" class="col-sm-2 col-form-label">Find by name:</label>
        <input type="text" class="col-sm-6 form-control"
               id="searchString" name="searchString" value="@ViewData["CurrentFilter"]"/>
        <div class="col-sm-4">
            <button type="submit" class="btn btn-primary">
                Search
            </button>
            <a class="btn btn-link" asp-action="Index">Back to full list</a>
        </div>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                @Html.DisplayNameFor(model => model[0].LastName)
            </a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].FirstMidName)
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-searchString="@ViewData["CurrentFilter"]">
                @Html.DisplayNameFor(model => model[0].EnrollmentDate)
            </a>
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @nextDisabled">
    Next
</a>